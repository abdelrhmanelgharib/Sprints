
TIMER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000092e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  0000092e  000009c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  00800066  00800066  000009c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000a34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000116f  00000000  00000000  00000ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ae  00000000  00000000  00001d13  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a65  00000000  00000000  000024c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000410  00000000  00000000  00002f28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000aaa  00000000  00000000  00003338  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b00  00000000  00000000  00003de2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  000048e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__vector_6>
  1c:	0c 94 5c 02 	jmp	0x4b8	; 0x4b8 <__vector_7>
  20:	0c 94 85 02 	jmp	0x50a	; 0x50a <__vector_8>
  24:	0c 94 33 02 	jmp	0x466	; 0x466 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e2       	ldi	r30, 0x2E	; 46
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e6       	ldi	r26, 0x66	; 102
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 37       	cpi	r26, 0x74	; 116
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <main>
  8a:	0c 94 95 04 	jmp	0x92a	; 0x92a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_voidSetPinDirection>:
    case PORT_D:
        EN_ret_val = GETBIT(PIND, EN_Pin);
        break;
    }
    return EN_ret_val;
}   /* DIO_u8GetPinValue */
  92:	41 11       	cpse	r20, r1
  94:	38 c0       	rjmp	.+112    	; 0x106 <DIO_voidSetPinDirection+0x74>
  96:	81 30       	cpi	r24, 0x01	; 1
  98:	91 f0       	breq	.+36     	; 0xbe <DIO_voidSetPinDirection+0x2c>
  9a:	28 f0       	brcs	.+10     	; 0xa6 <DIO_voidSetPinDirection+0x14>
  9c:	82 30       	cpi	r24, 0x02	; 2
  9e:	d9 f0       	breq	.+54     	; 0xd6 <DIO_voidSetPinDirection+0x44>
  a0:	83 30       	cpi	r24, 0x03	; 3
  a2:	29 f1       	breq	.+74     	; 0xee <DIO_voidSetPinDirection+0x5c>
  a4:	08 95       	ret
  a6:	2a b3       	in	r18, 0x1a	; 26
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <DIO_voidSetPinDirection+0x20>
  ae:	88 0f       	add	r24, r24
  b0:	99 1f       	adc	r25, r25
  b2:	6a 95       	dec	r22
  b4:	e2 f7       	brpl	.-8      	; 0xae <DIO_voidSetPinDirection+0x1c>
  b6:	80 95       	com	r24
  b8:	82 23       	and	r24, r18
  ba:	8a bb       	out	0x1a, r24	; 26
  bc:	08 95       	ret
  be:	27 b3       	in	r18, 0x17	; 23
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	02 c0       	rjmp	.+4      	; 0xca <DIO_voidSetPinDirection+0x38>
  c6:	88 0f       	add	r24, r24
  c8:	99 1f       	adc	r25, r25
  ca:	6a 95       	dec	r22
  cc:	e2 f7       	brpl	.-8      	; 0xc6 <DIO_voidSetPinDirection+0x34>
  ce:	80 95       	com	r24
  d0:	82 23       	and	r24, r18
  d2:	87 bb       	out	0x17, r24	; 23
  d4:	08 95       	ret
  d6:	24 b3       	in	r18, 0x14	; 20
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DIO_voidSetPinDirection+0x50>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	6a 95       	dec	r22
  e4:	e2 f7       	brpl	.-8      	; 0xde <DIO_voidSetPinDirection+0x4c>
  e6:	80 95       	com	r24
  e8:	82 23       	and	r24, r18
  ea:	84 bb       	out	0x14, r24	; 20
  ec:	08 95       	ret
  ee:	21 b3       	in	r18, 0x11	; 17
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_voidSetPinDirection+0x68>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_voidSetPinDirection+0x64>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	81 bb       	out	0x11, r24	; 17
 104:	08 95       	ret
 106:	41 30       	cpi	r20, 0x01	; 1
 108:	99 f5       	brne	.+102    	; 0x170 <DIO_voidSetPinDirection+0xde>
 10a:	81 30       	cpi	r24, 0x01	; 1
 10c:	89 f0       	breq	.+34     	; 0x130 <DIO_voidSetPinDirection+0x9e>
 10e:	28 f0       	brcs	.+10     	; 0x11a <DIO_voidSetPinDirection+0x88>
 110:	82 30       	cpi	r24, 0x02	; 2
 112:	c9 f0       	breq	.+50     	; 0x146 <DIO_voidSetPinDirection+0xb4>
 114:	83 30       	cpi	r24, 0x03	; 3
 116:	11 f1       	breq	.+68     	; 0x15c <DIO_voidSetPinDirection+0xca>
 118:	08 95       	ret
 11a:	2a b3       	in	r18, 0x1a	; 26
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_voidSetPinDirection+0x94>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_voidSetPinDirection+0x90>
 12a:	82 2b       	or	r24, r18
 12c:	8a bb       	out	0x1a, r24	; 26
 12e:	08 95       	ret
 130:	27 b3       	in	r18, 0x17	; 23
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_voidSetPinDirection+0xaa>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_voidSetPinDirection+0xa6>
 140:	82 2b       	or	r24, r18
 142:	87 bb       	out	0x17, r24	; 23
 144:	08 95       	ret
 146:	24 b3       	in	r18, 0x14	; 20
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_voidSetPinDirection+0xc0>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_voidSetPinDirection+0xbc>
 156:	82 2b       	or	r24, r18
 158:	84 bb       	out	0x14, r24	; 20
 15a:	08 95       	ret
 15c:	21 b3       	in	r18, 0x11	; 17
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_voidSetPinDirection+0xd6>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	6a 95       	dec	r22
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_voidSetPinDirection+0xd2>
 16c:	82 2b       	or	r24, r18
 16e:	81 bb       	out	0x11, r24	; 17
 170:	08 95       	ret

00000172 <DIO_voidTogPin>:
 * @param EN_Port   PORT Name
* @param EN_Pin     PIN Number
 */
void DIO_voidTogPin(EN_port_num EN_Port, EN_pin_num EN_Pin)
{
    switch (EN_Port)
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	89 f0       	breq	.+34     	; 0x198 <DIO_voidTogPin+0x26>
 176:	28 f0       	brcs	.+10     	; 0x182 <DIO_voidTogPin+0x10>
 178:	82 30       	cpi	r24, 0x02	; 2
 17a:	c9 f0       	breq	.+50     	; 0x1ae <DIO_voidTogPin+0x3c>
 17c:	83 30       	cpi	r24, 0x03	; 3
 17e:	11 f1       	breq	.+68     	; 0x1c4 <DIO_voidTogPin+0x52>
 180:	08 95       	ret
    {
    case PORT_A:
        TGLBIT(PORTA, EN_Pin);
 182:	2b b3       	in	r18, 0x1b	; 27
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_voidTogPin+0x1c>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	6a 95       	dec	r22
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_voidTogPin+0x18>
 192:	82 27       	eor	r24, r18
 194:	8b bb       	out	0x1b, r24	; 27
        break;
 196:	08 95       	ret
    case PORT_B:
        TGLBIT(PORTB, EN_Pin);
 198:	28 b3       	in	r18, 0x18	; 24
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_voidTogPin+0x32>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	6a 95       	dec	r22
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_voidTogPin+0x2e>
 1a8:	82 27       	eor	r24, r18
 1aa:	88 bb       	out	0x18, r24	; 24
        break;
 1ac:	08 95       	ret
    case PORT_C:
        TGLBIT(PORTC, EN_Pin);
 1ae:	25 b3       	in	r18, 0x15	; 21
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_voidTogPin+0x48>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_voidTogPin+0x44>
 1be:	82 27       	eor	r24, r18
 1c0:	85 bb       	out	0x15, r24	; 21
        break;
 1c2:	08 95       	ret
    case PORT_D:
        TGLBIT(PORTD, EN_Pin);
 1c4:	22 b3       	in	r18, 0x12	; 18
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_voidTogPin+0x5e>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_voidTogPin+0x5a>
 1d4:	82 27       	eor	r24, r18
 1d6:	82 bb       	out	0x12, r24	; 18
 1d8:	08 95       	ret

000001da <APP>:
#include "Timer.h"


void APP(void)
{
  DIO_voidTogPin(PORT_A, PIN0);
 1da:	60 e0       	ldi	r22, 0x00	; 0
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	0e 94 b9 00 	call	0x172	; 0x172 <DIO_voidTogPin>
 1e2:	08 95       	ret

000001e4 <main>:
}

int main()
{

  DIO_voidSetPinDirection(PORT_A, PIN0, OUTPUT);
 1e4:	41 e0       	ldi	r20, 0x01	; 1
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>

  Timer0_Init(TIMER0_NORMAL_MODE, TIMER0_SCALER_8, OCO_DISCONNECTED);
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	62 e0       	ldi	r22, 0x02	; 2
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	0e 94 0d 01 	call	0x21a	; 0x21a <Timer0_Init>
  Timer0_SetCallBack(APP);
 1f8:	8d ee       	ldi	r24, 0xED	; 237
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	0e 94 6e 01 	call	0x2dc	; 0x2dc <Timer0_SetCallBack>
  Timer0_delayUs(1000000);
 200:	60 e4       	ldi	r22, 0x40	; 64
 202:	72 e4       	ldi	r23, 0x42	; 66
 204:	8f e0       	ldi	r24, 0x0F	; 15
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 73 01 	call	0x2e6	; 0x2e6 <Timer0_delayUs>
  Timer0_OV_InterruptEnable();
 20c:	0e 94 67 01 	call	0x2ce	; 0x2ce <Timer0_OV_InterruptEnable>

  while (1)
  {

    DIO_voidTogPin(PORT_B, PIN1);
 210:	61 e0       	ldi	r22, 0x01	; 1
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	0e 94 b9 00 	call	0x172	; 0x172 <DIO_voidTogPin>
 218:	fb cf       	rjmp	.-10     	; 0x210 <main+0x2c>

0000021a <Timer0_Init>:
{
	Timer1_OCB_Fptr = LocalFptr;
}
void Timer1_ICU_SetCallBack(void (*LocalFptr)(void))
{
	Timer1_ICU_Fptr = LocalFptr;
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	71 f0       	breq	.+28     	; 0x23a <Timer0_Init+0x20>
 21e:	28 f0       	brcs	.+10     	; 0x22a <Timer0_Init+0x10>
 220:	82 30       	cpi	r24, 0x02	; 2
 222:	99 f0       	breq	.+38     	; 0x24a <Timer0_Init+0x30>
 224:	83 30       	cpi	r24, 0x03	; 3
 226:	c9 f0       	breq	.+50     	; 0x25a <Timer0_Init+0x40>
 228:	20 c0       	rjmp	.+64     	; 0x26a <Timer0_Init+0x50>
 22a:	83 b7       	in	r24, 0x33	; 51
 22c:	8f 7b       	andi	r24, 0xBF	; 191
 22e:	83 bf       	out	0x33, r24	; 51
 230:	83 b7       	in	r24, 0x33	; 51
 232:	87 7f       	andi	r24, 0xF7	; 247
 234:	83 bf       	out	0x33, r24	; 51
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	19 c0       	rjmp	.+50     	; 0x26c <Timer0_Init+0x52>
 23a:	83 b7       	in	r24, 0x33	; 51
 23c:	80 64       	ori	r24, 0x40	; 64
 23e:	83 bf       	out	0x33, r24	; 51
 240:	83 b7       	in	r24, 0x33	; 51
 242:	87 7f       	andi	r24, 0xF7	; 247
 244:	83 bf       	out	0x33, r24	; 51
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	11 c0       	rjmp	.+34     	; 0x26c <Timer0_Init+0x52>
 24a:	83 b7       	in	r24, 0x33	; 51
 24c:	8f 7b       	andi	r24, 0xBF	; 191
 24e:	83 bf       	out	0x33, r24	; 51
 250:	83 b7       	in	r24, 0x33	; 51
 252:	88 60       	ori	r24, 0x08	; 8
 254:	83 bf       	out	0x33, r24	; 51
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	09 c0       	rjmp	.+18     	; 0x26c <Timer0_Init+0x52>
 25a:	83 b7       	in	r24, 0x33	; 51
 25c:	80 64       	ori	r24, 0x40	; 64
 25e:	83 bf       	out	0x33, r24	; 51
 260:	83 b7       	in	r24, 0x33	; 51
 262:	88 60       	ori	r24, 0x08	; 8
 264:	83 bf       	out	0x33, r24	; 51
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	01 c0       	rjmp	.+2      	; 0x26c <Timer0_Init+0x52>
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	93 b7       	in	r25, 0x33	; 51
 26e:	98 7f       	andi	r25, 0xF8	; 248
 270:	93 bf       	out	0x33, r25	; 51
 272:	93 b7       	in	r25, 0x33	; 51
 274:	96 2b       	or	r25, r22
 276:	93 bf       	out	0x33, r25	; 51
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <gPrescal+0x1>
 27e:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <gPrescal>
 282:	41 30       	cpi	r20, 0x01	; 1
 284:	69 f0       	breq	.+26     	; 0x2a0 <Timer0_Init+0x86>
 286:	28 f0       	brcs	.+10     	; 0x292 <Timer0_Init+0x78>
 288:	42 30       	cpi	r20, 0x02	; 2
 28a:	89 f0       	breq	.+34     	; 0x2ae <Timer0_Init+0x94>
 28c:	43 30       	cpi	r20, 0x03	; 3
 28e:	b1 f0       	breq	.+44     	; 0x2bc <Timer0_Init+0xa2>
 290:	1c c0       	rjmp	.+56     	; 0x2ca <Timer0_Init+0xb0>
 292:	93 b7       	in	r25, 0x33	; 51
 294:	9f 7e       	andi	r25, 0xEF	; 239
 296:	93 bf       	out	0x33, r25	; 51
 298:	93 b7       	in	r25, 0x33	; 51
 29a:	9f 7d       	andi	r25, 0xDF	; 223
 29c:	93 bf       	out	0x33, r25	; 51
 29e:	08 95       	ret
 2a0:	93 b7       	in	r25, 0x33	; 51
 2a2:	90 61       	ori	r25, 0x10	; 16
 2a4:	93 bf       	out	0x33, r25	; 51
 2a6:	93 b7       	in	r25, 0x33	; 51
 2a8:	9f 7d       	andi	r25, 0xDF	; 223
 2aa:	93 bf       	out	0x33, r25	; 51
 2ac:	08 95       	ret
 2ae:	93 b7       	in	r25, 0x33	; 51
 2b0:	9f 7e       	andi	r25, 0xEF	; 239
 2b2:	93 bf       	out	0x33, r25	; 51
 2b4:	93 b7       	in	r25, 0x33	; 51
 2b6:	90 62       	ori	r25, 0x20	; 32
 2b8:	93 bf       	out	0x33, r25	; 51
 2ba:	08 95       	ret
 2bc:	93 b7       	in	r25, 0x33	; 51
 2be:	90 61       	ori	r25, 0x10	; 16
 2c0:	93 bf       	out	0x33, r25	; 51
 2c2:	93 b7       	in	r25, 0x33	; 51
 2c4:	90 62       	ori	r25, 0x20	; 32
 2c6:	93 bf       	out	0x33, r25	; 51
 2c8:	08 95       	ret
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	08 95       	ret

000002ce <Timer0_OV_InterruptEnable>:
 2ce:	8f b7       	in	r24, 0x3f	; 63
 2d0:	80 68       	ori	r24, 0x80	; 128
 2d2:	8f bf       	out	0x3f, r24	; 63
 2d4:	89 b7       	in	r24, 0x39	; 57
 2d6:	81 60       	ori	r24, 0x01	; 1
 2d8:	89 bf       	out	0x39, r24	; 57
 2da:	08 95       	ret

000002dc <Timer0_SetCallBack>:
 2dc:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <Timer0_OVF_Fptr+0x1>
 2e0:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <Timer0_OVF_Fptr>
 2e4:	08 95       	ret

000002e6 <Timer0_delayUs>:
 2e6:	cf 92       	push	r12
 2e8:	df 92       	push	r13
 2ea:	ef 92       	push	r14
 2ec:	ff 92       	push	r15
 2ee:	cf 93       	push	r28
 2f0:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <gPrescal>
 2f4:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <gPrescal+0x1>
 2f8:	22 30       	cpi	r18, 0x02	; 2
 2fa:	31 05       	cpc	r19, r1
 2fc:	41 f4       	brne	.+16     	; 0x30e <Timer0_delayUs+0x28>
 2fe:	28 e0       	ldi	r18, 0x08	; 8
 300:	30 e0       	ldi	r19, 0x00	; 0
 302:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <gPrescal+0x1>
 306:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <gPrescal>
 30a:	c1 e0       	ldi	r28, 0x01	; 1
 30c:	22 c0       	rjmp	.+68     	; 0x352 <Timer0_delayUs+0x6c>
 30e:	23 30       	cpi	r18, 0x03	; 3
 310:	31 05       	cpc	r19, r1
 312:	41 f4       	brne	.+16     	; 0x324 <Timer0_delayUs+0x3e>
 314:	20 e4       	ldi	r18, 0x40	; 64
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <gPrescal+0x1>
 31c:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <gPrescal>
 320:	c1 e0       	ldi	r28, 0x01	; 1
 322:	17 c0       	rjmp	.+46     	; 0x352 <Timer0_delayUs+0x6c>
 324:	24 30       	cpi	r18, 0x04	; 4
 326:	31 05       	cpc	r19, r1
 328:	41 f4       	brne	.+16     	; 0x33a <Timer0_delayUs+0x54>
 32a:	20 e0       	ldi	r18, 0x00	; 0
 32c:	31 e0       	ldi	r19, 0x01	; 1
 32e:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <gPrescal+0x1>
 332:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <gPrescal>
 336:	c1 e0       	ldi	r28, 0x01	; 1
 338:	0c c0       	rjmp	.+24     	; 0x352 <Timer0_delayUs+0x6c>
 33a:	25 30       	cpi	r18, 0x05	; 5
 33c:	31 05       	cpc	r19, r1
 33e:	41 f4       	brne	.+16     	; 0x350 <Timer0_delayUs+0x6a>
 340:	20 e0       	ldi	r18, 0x00	; 0
 342:	34 e0       	ldi	r19, 0x04	; 4
 344:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <gPrescal+0x1>
 348:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <gPrescal>
 34c:	c1 e0       	ldi	r28, 0x01	; 1
 34e:	01 c0       	rjmp	.+2      	; 0x352 <Timer0_delayUs+0x6c>
 350:	c0 e0       	ldi	r28, 0x00	; 0
 352:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__floatunsisf>
 356:	6b 01       	movw	r12, r22
 358:	7c 01       	movw	r14, r24
 35a:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <gPrescal>
 35e:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <gPrescal+0x1>
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__floatunsisf>
 36a:	20 e0       	ldi	r18, 0x00	; 0
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	40 e0       	ldi	r20, 0x00	; 0
 370:	5e e3       	ldi	r21, 0x3E	; 62
 372:	0e 94 06 04 	call	0x80c	; 0x80c <__mulsf3>
 376:	9b 01       	movw	r18, r22
 378:	ac 01       	movw	r20, r24
 37a:	c7 01       	movw	r24, r14
 37c:	b6 01       	movw	r22, r12
 37e:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__divsf3>
 382:	0e 94 49 03 	call	0x692	; 0x692 <__fixunssfsi>
 386:	2a ef       	ldi	r18, 0xFA	; 250
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	40 e0       	ldi	r20, 0x00	; 0
 38c:	50 e0       	ldi	r21, 0x00	; 0
 38e:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__udivmodsi4>
 392:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
 396:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 39a:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 39e:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	cf 91       	pop	r28
 3a6:	ff 90       	pop	r15
 3a8:	ef 90       	pop	r14
 3aa:	df 90       	pop	r13
 3ac:	cf 90       	pop	r12
 3ae:	08 95       	ret

000003b0 <__vector_11>:
 3b0:	1f 92       	push	r1
 3b2:	0f 92       	push	r0
 3b4:	0f b6       	in	r0, 0x3f	; 63
 3b6:	0f 92       	push	r0
 3b8:	11 24       	eor	r1, r1
 3ba:	2f 93       	push	r18
 3bc:	3f 93       	push	r19
 3be:	4f 93       	push	r20
 3c0:	5f 93       	push	r21
 3c2:	6f 93       	push	r22
 3c4:	7f 93       	push	r23
 3c6:	8f 93       	push	r24
 3c8:	9f 93       	push	r25
 3ca:	af 93       	push	r26
 3cc:	bf 93       	push	r27
 3ce:	ef 93       	push	r30
 3d0:	ff 93       	push	r31
 3d2:	86 e0       	ldi	r24, 0x06	; 6
 3d4:	82 bf       	out	0x32, r24	; 50
 3d6:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 3da:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 3de:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <__data_end+0x2>
 3e2:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <__data_end+0x3>
 3e6:	01 96       	adiw	r24, 0x01	; 1
 3e8:	a1 1d       	adc	r26, r1
 3ea:	b1 1d       	adc	r27, r1
 3ec:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end>
 3f0:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x1>
 3f4:	a0 93 68 00 	sts	0x0068, r26	; 0x800068 <__data_end+0x2>
 3f8:	b0 93 69 00 	sts	0x0069, r27	; 0x800069 <__data_end+0x3>
 3fc:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <Timer0_OVF_Fptr>
 400:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <Timer0_OVF_Fptr+0x1>
 404:	30 97       	sbiw	r30, 0x00	; 0
 406:	f1 f0       	breq	.+60     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 408:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <__data_end>
 40c:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <__data_end+0x1>
 410:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <__data_end+0x2>
 414:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <__data_end+0x3>
 418:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 41c:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 420:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 424:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 428:	48 17       	cp	r20, r24
 42a:	59 07       	cpc	r21, r25
 42c:	6a 07       	cpc	r22, r26
 42e:	7b 07       	cpc	r23, r27
 430:	49 f4       	brne	.+18     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 432:	09 95       	icall
 434:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__data_end>
 438:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__data_end+0x1>
 43c:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end+0x2>
 440:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__data_end+0x3>
 444:	ff 91       	pop	r31
 446:	ef 91       	pop	r30
 448:	bf 91       	pop	r27
 44a:	af 91       	pop	r26
 44c:	9f 91       	pop	r25
 44e:	8f 91       	pop	r24
 450:	7f 91       	pop	r23
 452:	6f 91       	pop	r22
 454:	5f 91       	pop	r21
 456:	4f 91       	pop	r20
 458:	3f 91       	pop	r19
 45a:	2f 91       	pop	r18
 45c:	0f 90       	pop	r0
 45e:	0f be       	out	0x3f, r0	; 63
 460:	0f 90       	pop	r0
 462:	1f 90       	pop	r1
 464:	18 95       	reti

00000466 <__vector_9>:
}

/*********************************Timer 1 ISR functions*********************************************/
void __vector_9(void)
{
 466:	1f 92       	push	r1
 468:	0f 92       	push	r0
 46a:	0f b6       	in	r0, 0x3f	; 63
 46c:	0f 92       	push	r0
 46e:	11 24       	eor	r1, r1
 470:	2f 93       	push	r18
 472:	3f 93       	push	r19
 474:	4f 93       	push	r20
 476:	5f 93       	push	r21
 478:	6f 93       	push	r22
 47a:	7f 93       	push	r23
 47c:	8f 93       	push	r24
 47e:	9f 93       	push	r25
 480:	af 93       	push	r26
 482:	bf 93       	push	r27
 484:	ef 93       	push	r30
 486:	ff 93       	push	r31
	if (Timer1_OVF_Fptr != NULLPTR)
 488:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <Timer1_OVF_Fptr>
 48c:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <Timer1_OVF_Fptr+0x1>
 490:	30 97       	sbiw	r30, 0x00	; 0
 492:	09 f0       	breq	.+2      	; 0x496 <__vector_9+0x30>
	{
		Timer1_OVF_Fptr();
 494:	09 95       	icall
	}
}
 496:	ff 91       	pop	r31
 498:	ef 91       	pop	r30
 49a:	bf 91       	pop	r27
 49c:	af 91       	pop	r26
 49e:	9f 91       	pop	r25
 4a0:	8f 91       	pop	r24
 4a2:	7f 91       	pop	r23
 4a4:	6f 91       	pop	r22
 4a6:	5f 91       	pop	r21
 4a8:	4f 91       	pop	r20
 4aa:	3f 91       	pop	r19
 4ac:	2f 91       	pop	r18
 4ae:	0f 90       	pop	r0
 4b0:	0f be       	out	0x3f, r0	; 63
 4b2:	0f 90       	pop	r0
 4b4:	1f 90       	pop	r1
 4b6:	18 95       	reti

000004b8 <__vector_7>:

void __vector_7(void)
{
 4b8:	1f 92       	push	r1
 4ba:	0f 92       	push	r0
 4bc:	0f b6       	in	r0, 0x3f	; 63
 4be:	0f 92       	push	r0
 4c0:	11 24       	eor	r1, r1
 4c2:	2f 93       	push	r18
 4c4:	3f 93       	push	r19
 4c6:	4f 93       	push	r20
 4c8:	5f 93       	push	r21
 4ca:	6f 93       	push	r22
 4cc:	7f 93       	push	r23
 4ce:	8f 93       	push	r24
 4d0:	9f 93       	push	r25
 4d2:	af 93       	push	r26
 4d4:	bf 93       	push	r27
 4d6:	ef 93       	push	r30
 4d8:	ff 93       	push	r31
	if (Timer1_OCA_Fptr != NULLPTR)
 4da:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <Timer1_OCA_Fptr>
 4de:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <Timer1_OCA_Fptr+0x1>
 4e2:	30 97       	sbiw	r30, 0x00	; 0
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <__vector_7+0x30>
	{
		Timer1_OCA_Fptr();
 4e6:	09 95       	icall
	}
}
 4e8:	ff 91       	pop	r31
 4ea:	ef 91       	pop	r30
 4ec:	bf 91       	pop	r27
 4ee:	af 91       	pop	r26
 4f0:	9f 91       	pop	r25
 4f2:	8f 91       	pop	r24
 4f4:	7f 91       	pop	r23
 4f6:	6f 91       	pop	r22
 4f8:	5f 91       	pop	r21
 4fa:	4f 91       	pop	r20
 4fc:	3f 91       	pop	r19
 4fe:	2f 91       	pop	r18
 500:	0f 90       	pop	r0
 502:	0f be       	out	0x3f, r0	; 63
 504:	0f 90       	pop	r0
 506:	1f 90       	pop	r1
 508:	18 95       	reti

0000050a <__vector_8>:
void __vector_8(void)
{
 50a:	1f 92       	push	r1
 50c:	0f 92       	push	r0
 50e:	0f b6       	in	r0, 0x3f	; 63
 510:	0f 92       	push	r0
 512:	11 24       	eor	r1, r1
 514:	2f 93       	push	r18
 516:	3f 93       	push	r19
 518:	4f 93       	push	r20
 51a:	5f 93       	push	r21
 51c:	6f 93       	push	r22
 51e:	7f 93       	push	r23
 520:	8f 93       	push	r24
 522:	9f 93       	push	r25
 524:	af 93       	push	r26
 526:	bf 93       	push	r27
 528:	ef 93       	push	r30
 52a:	ff 93       	push	r31
	if (Timer1_OCB_Fptr != NULLPTR)
 52c:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <Timer1_OCB_Fptr>
 530:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <Timer1_OCB_Fptr+0x1>
 534:	30 97       	sbiw	r30, 0x00	; 0
 536:	09 f0       	breq	.+2      	; 0x53a <__vector_8+0x30>
	{
		Timer1_OCB_Fptr();
 538:	09 95       	icall
	}
}
 53a:	ff 91       	pop	r31
 53c:	ef 91       	pop	r30
 53e:	bf 91       	pop	r27
 540:	af 91       	pop	r26
 542:	9f 91       	pop	r25
 544:	8f 91       	pop	r24
 546:	7f 91       	pop	r23
 548:	6f 91       	pop	r22
 54a:	5f 91       	pop	r21
 54c:	4f 91       	pop	r20
 54e:	3f 91       	pop	r19
 550:	2f 91       	pop	r18
 552:	0f 90       	pop	r0
 554:	0f be       	out	0x3f, r0	; 63
 556:	0f 90       	pop	r0
 558:	1f 90       	pop	r1
 55a:	18 95       	reti

0000055c <__vector_6>:
void __vector_6(void)
{
 55c:	1f 92       	push	r1
 55e:	0f 92       	push	r0
 560:	0f b6       	in	r0, 0x3f	; 63
 562:	0f 92       	push	r0
 564:	11 24       	eor	r1, r1
 566:	2f 93       	push	r18
 568:	3f 93       	push	r19
 56a:	4f 93       	push	r20
 56c:	5f 93       	push	r21
 56e:	6f 93       	push	r22
 570:	7f 93       	push	r23
 572:	8f 93       	push	r24
 574:	9f 93       	push	r25
 576:	af 93       	push	r26
 578:	bf 93       	push	r27
 57a:	ef 93       	push	r30
 57c:	ff 93       	push	r31
	if (Timer1_ICU_Fptr != NULLPTR)
 57e:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <Timer1_ICU_Fptr>
 582:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <Timer1_ICU_Fptr+0x1>
 586:	30 97       	sbiw	r30, 0x00	; 0
 588:	09 f0       	breq	.+2      	; 0x58c <__vector_6+0x30>
	{
		Timer1_ICU_Fptr();
 58a:	09 95       	icall
	}
 58c:	ff 91       	pop	r31
 58e:	ef 91       	pop	r30
 590:	bf 91       	pop	r27
 592:	af 91       	pop	r26
 594:	9f 91       	pop	r25
 596:	8f 91       	pop	r24
 598:	7f 91       	pop	r23
 59a:	6f 91       	pop	r22
 59c:	5f 91       	pop	r21
 59e:	4f 91       	pop	r20
 5a0:	3f 91       	pop	r19
 5a2:	2f 91       	pop	r18
 5a4:	0f 90       	pop	r0
 5a6:	0f be       	out	0x3f, r0	; 63
 5a8:	0f 90       	pop	r0
 5aa:	1f 90       	pop	r1
 5ac:	18 95       	reti

000005ae <__divsf3>:
 5ae:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__divsf3x>
 5b2:	0c 94 cc 03 	jmp	0x798	; 0x798 <__fp_round>
 5b6:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_pscB>
 5ba:	58 f0       	brcs	.+22     	; 0x5d2 <__divsf3+0x24>
 5bc:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscA>
 5c0:	40 f0       	brcs	.+16     	; 0x5d2 <__divsf3+0x24>
 5c2:	29 f4       	brne	.+10     	; 0x5ce <__divsf3+0x20>
 5c4:	5f 3f       	cpi	r21, 0xFF	; 255
 5c6:	29 f0       	breq	.+10     	; 0x5d2 <__divsf3+0x24>
 5c8:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 5cc:	51 11       	cpse	r21, r1
 5ce:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>
 5d2:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_nan>

000005d6 <__divsf3x>:
 5d6:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_split3>
 5da:	68 f3       	brcs	.-38     	; 0x5b6 <__divsf3+0x8>

000005dc <__divsf3_pse>:
 5dc:	99 23       	and	r25, r25
 5de:	b1 f3       	breq	.-20     	; 0x5cc <__divsf3+0x1e>
 5e0:	55 23       	and	r21, r21
 5e2:	91 f3       	breq	.-28     	; 0x5c8 <__divsf3+0x1a>
 5e4:	95 1b       	sub	r25, r21
 5e6:	55 0b       	sbc	r21, r21
 5e8:	bb 27       	eor	r27, r27
 5ea:	aa 27       	eor	r26, r26
 5ec:	62 17       	cp	r22, r18
 5ee:	73 07       	cpc	r23, r19
 5f0:	84 07       	cpc	r24, r20
 5f2:	38 f0       	brcs	.+14     	; 0x602 <__divsf3_pse+0x26>
 5f4:	9f 5f       	subi	r25, 0xFF	; 255
 5f6:	5f 4f       	sbci	r21, 0xFF	; 255
 5f8:	22 0f       	add	r18, r18
 5fa:	33 1f       	adc	r19, r19
 5fc:	44 1f       	adc	r20, r20
 5fe:	aa 1f       	adc	r26, r26
 600:	a9 f3       	breq	.-22     	; 0x5ec <__divsf3_pse+0x10>
 602:	35 d0       	rcall	.+106    	; 0x66e <__divsf3_pse+0x92>
 604:	0e 2e       	mov	r0, r30
 606:	3a f0       	brmi	.+14     	; 0x616 <__divsf3_pse+0x3a>
 608:	e0 e8       	ldi	r30, 0x80	; 128
 60a:	32 d0       	rcall	.+100    	; 0x670 <__divsf3_pse+0x94>
 60c:	91 50       	subi	r25, 0x01	; 1
 60e:	50 40       	sbci	r21, 0x00	; 0
 610:	e6 95       	lsr	r30
 612:	00 1c       	adc	r0, r0
 614:	ca f7       	brpl	.-14     	; 0x608 <__divsf3_pse+0x2c>
 616:	2b d0       	rcall	.+86     	; 0x66e <__divsf3_pse+0x92>
 618:	fe 2f       	mov	r31, r30
 61a:	29 d0       	rcall	.+82     	; 0x66e <__divsf3_pse+0x92>
 61c:	66 0f       	add	r22, r22
 61e:	77 1f       	adc	r23, r23
 620:	88 1f       	adc	r24, r24
 622:	bb 1f       	adc	r27, r27
 624:	26 17       	cp	r18, r22
 626:	37 07       	cpc	r19, r23
 628:	48 07       	cpc	r20, r24
 62a:	ab 07       	cpc	r26, r27
 62c:	b0 e8       	ldi	r27, 0x80	; 128
 62e:	09 f0       	breq	.+2      	; 0x632 <__divsf3_pse+0x56>
 630:	bb 0b       	sbc	r27, r27
 632:	80 2d       	mov	r24, r0
 634:	bf 01       	movw	r22, r30
 636:	ff 27       	eor	r31, r31
 638:	93 58       	subi	r25, 0x83	; 131
 63a:	5f 4f       	sbci	r21, 0xFF	; 255
 63c:	3a f0       	brmi	.+14     	; 0x64c <__divsf3_pse+0x70>
 63e:	9e 3f       	cpi	r25, 0xFE	; 254
 640:	51 05       	cpc	r21, r1
 642:	78 f0       	brcs	.+30     	; 0x662 <__divsf3_pse+0x86>
 644:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 648:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>
 64c:	5f 3f       	cpi	r21, 0xFF	; 255
 64e:	e4 f3       	brlt	.-8      	; 0x648 <__divsf3_pse+0x6c>
 650:	98 3e       	cpi	r25, 0xE8	; 232
 652:	d4 f3       	brlt	.-12     	; 0x648 <__divsf3_pse+0x6c>
 654:	86 95       	lsr	r24
 656:	77 95       	ror	r23
 658:	67 95       	ror	r22
 65a:	b7 95       	ror	r27
 65c:	f7 95       	ror	r31
 65e:	9f 5f       	subi	r25, 0xFF	; 255
 660:	c9 f7       	brne	.-14     	; 0x654 <__divsf3_pse+0x78>
 662:	88 0f       	add	r24, r24
 664:	91 1d       	adc	r25, r1
 666:	96 95       	lsr	r25
 668:	87 95       	ror	r24
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret
 66e:	e1 e0       	ldi	r30, 0x01	; 1
 670:	66 0f       	add	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	88 1f       	adc	r24, r24
 676:	bb 1f       	adc	r27, r27
 678:	62 17       	cp	r22, r18
 67a:	73 07       	cpc	r23, r19
 67c:	84 07       	cpc	r24, r20
 67e:	ba 07       	cpc	r27, r26
 680:	20 f0       	brcs	.+8      	; 0x68a <__divsf3_pse+0xae>
 682:	62 1b       	sub	r22, r18
 684:	73 0b       	sbc	r23, r19
 686:	84 0b       	sbc	r24, r20
 688:	ba 0b       	sbc	r27, r26
 68a:	ee 1f       	adc	r30, r30
 68c:	88 f7       	brcc	.-30     	; 0x670 <__divsf3_pse+0x94>
 68e:	e0 95       	com	r30
 690:	08 95       	ret

00000692 <__fixunssfsi>:
 692:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__fp_splitA>
 696:	88 f0       	brcs	.+34     	; 0x6ba <__fixunssfsi+0x28>
 698:	9f 57       	subi	r25, 0x7F	; 127
 69a:	98 f0       	brcs	.+38     	; 0x6c2 <__fixunssfsi+0x30>
 69c:	b9 2f       	mov	r27, r25
 69e:	99 27       	eor	r25, r25
 6a0:	b7 51       	subi	r27, 0x17	; 23
 6a2:	b0 f0       	brcs	.+44     	; 0x6d0 <__fixunssfsi+0x3e>
 6a4:	e1 f0       	breq	.+56     	; 0x6de <__fixunssfsi+0x4c>
 6a6:	66 0f       	add	r22, r22
 6a8:	77 1f       	adc	r23, r23
 6aa:	88 1f       	adc	r24, r24
 6ac:	99 1f       	adc	r25, r25
 6ae:	1a f0       	brmi	.+6      	; 0x6b6 <__fixunssfsi+0x24>
 6b0:	ba 95       	dec	r27
 6b2:	c9 f7       	brne	.-14     	; 0x6a6 <__fixunssfsi+0x14>
 6b4:	14 c0       	rjmp	.+40     	; 0x6de <__fixunssfsi+0x4c>
 6b6:	b1 30       	cpi	r27, 0x01	; 1
 6b8:	91 f0       	breq	.+36     	; 0x6de <__fixunssfsi+0x4c>
 6ba:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fp_zero>
 6be:	b1 e0       	ldi	r27, 0x01	; 1
 6c0:	08 95       	ret
 6c2:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__fp_zero>
 6c6:	67 2f       	mov	r22, r23
 6c8:	78 2f       	mov	r23, r24
 6ca:	88 27       	eor	r24, r24
 6cc:	b8 5f       	subi	r27, 0xF8	; 248
 6ce:	39 f0       	breq	.+14     	; 0x6de <__fixunssfsi+0x4c>
 6d0:	b9 3f       	cpi	r27, 0xF9	; 249
 6d2:	cc f3       	brlt	.-14     	; 0x6c6 <__fixunssfsi+0x34>
 6d4:	86 95       	lsr	r24
 6d6:	77 95       	ror	r23
 6d8:	67 95       	ror	r22
 6da:	b3 95       	inc	r27
 6dc:	d9 f7       	brne	.-10     	; 0x6d4 <__fixunssfsi+0x42>
 6de:	3e f4       	brtc	.+14     	; 0x6ee <__fixunssfsi+0x5c>
 6e0:	90 95       	com	r25
 6e2:	80 95       	com	r24
 6e4:	70 95       	com	r23
 6e6:	61 95       	neg	r22
 6e8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ea:	8f 4f       	sbci	r24, 0xFF	; 255
 6ec:	9f 4f       	sbci	r25, 0xFF	; 255
 6ee:	08 95       	ret

000006f0 <__floatunsisf>:
 6f0:	e8 94       	clt
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <__floatsisf+0x12>

000006f4 <__floatsisf>:
 6f4:	97 fb       	bst	r25, 7
 6f6:	3e f4       	brtc	.+14     	; 0x706 <__floatsisf+0x12>
 6f8:	90 95       	com	r25
 6fa:	80 95       	com	r24
 6fc:	70 95       	com	r23
 6fe:	61 95       	neg	r22
 700:	7f 4f       	sbci	r23, 0xFF	; 255
 702:	8f 4f       	sbci	r24, 0xFF	; 255
 704:	9f 4f       	sbci	r25, 0xFF	; 255
 706:	99 23       	and	r25, r25
 708:	a9 f0       	breq	.+42     	; 0x734 <__floatsisf+0x40>
 70a:	f9 2f       	mov	r31, r25
 70c:	96 e9       	ldi	r25, 0x96	; 150
 70e:	bb 27       	eor	r27, r27
 710:	93 95       	inc	r25
 712:	f6 95       	lsr	r31
 714:	87 95       	ror	r24
 716:	77 95       	ror	r23
 718:	67 95       	ror	r22
 71a:	b7 95       	ror	r27
 71c:	f1 11       	cpse	r31, r1
 71e:	f8 cf       	rjmp	.-16     	; 0x710 <__floatsisf+0x1c>
 720:	fa f4       	brpl	.+62     	; 0x760 <__floatsisf+0x6c>
 722:	bb 0f       	add	r27, r27
 724:	11 f4       	brne	.+4      	; 0x72a <__floatsisf+0x36>
 726:	60 ff       	sbrs	r22, 0
 728:	1b c0       	rjmp	.+54     	; 0x760 <__floatsisf+0x6c>
 72a:	6f 5f       	subi	r22, 0xFF	; 255
 72c:	7f 4f       	sbci	r23, 0xFF	; 255
 72e:	8f 4f       	sbci	r24, 0xFF	; 255
 730:	9f 4f       	sbci	r25, 0xFF	; 255
 732:	16 c0       	rjmp	.+44     	; 0x760 <__floatsisf+0x6c>
 734:	88 23       	and	r24, r24
 736:	11 f0       	breq	.+4      	; 0x73c <__floatsisf+0x48>
 738:	96 e9       	ldi	r25, 0x96	; 150
 73a:	11 c0       	rjmp	.+34     	; 0x75e <__floatsisf+0x6a>
 73c:	77 23       	and	r23, r23
 73e:	21 f0       	breq	.+8      	; 0x748 <__floatsisf+0x54>
 740:	9e e8       	ldi	r25, 0x8E	; 142
 742:	87 2f       	mov	r24, r23
 744:	76 2f       	mov	r23, r22
 746:	05 c0       	rjmp	.+10     	; 0x752 <__floatsisf+0x5e>
 748:	66 23       	and	r22, r22
 74a:	71 f0       	breq	.+28     	; 0x768 <__floatsisf+0x74>
 74c:	96 e8       	ldi	r25, 0x86	; 134
 74e:	86 2f       	mov	r24, r22
 750:	70 e0       	ldi	r23, 0x00	; 0
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	2a f0       	brmi	.+10     	; 0x760 <__floatsisf+0x6c>
 756:	9a 95       	dec	r25
 758:	66 0f       	add	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	da f7       	brpl	.-10     	; 0x756 <__floatsisf+0x62>
 760:	88 0f       	add	r24, r24
 762:	96 95       	lsr	r25
 764:	87 95       	ror	r24
 766:	97 f9       	bld	r25, 7
 768:	08 95       	ret

0000076a <__fp_inf>:
 76a:	97 f9       	bld	r25, 7
 76c:	9f 67       	ori	r25, 0x7F	; 127
 76e:	80 e8       	ldi	r24, 0x80	; 128
 770:	70 e0       	ldi	r23, 0x00	; 0
 772:	60 e0       	ldi	r22, 0x00	; 0
 774:	08 95       	ret

00000776 <__fp_nan>:
 776:	9f ef       	ldi	r25, 0xFF	; 255
 778:	80 ec       	ldi	r24, 0xC0	; 192
 77a:	08 95       	ret

0000077c <__fp_pscA>:
 77c:	00 24       	eor	r0, r0
 77e:	0a 94       	dec	r0
 780:	16 16       	cp	r1, r22
 782:	17 06       	cpc	r1, r23
 784:	18 06       	cpc	r1, r24
 786:	09 06       	cpc	r0, r25
 788:	08 95       	ret

0000078a <__fp_pscB>:
 78a:	00 24       	eor	r0, r0
 78c:	0a 94       	dec	r0
 78e:	12 16       	cp	r1, r18
 790:	13 06       	cpc	r1, r19
 792:	14 06       	cpc	r1, r20
 794:	05 06       	cpc	r0, r21
 796:	08 95       	ret

00000798 <__fp_round>:
 798:	09 2e       	mov	r0, r25
 79a:	03 94       	inc	r0
 79c:	00 0c       	add	r0, r0
 79e:	11 f4       	brne	.+4      	; 0x7a4 <__fp_round+0xc>
 7a0:	88 23       	and	r24, r24
 7a2:	52 f0       	brmi	.+20     	; 0x7b8 <__fp_round+0x20>
 7a4:	bb 0f       	add	r27, r27
 7a6:	40 f4       	brcc	.+16     	; 0x7b8 <__fp_round+0x20>
 7a8:	bf 2b       	or	r27, r31
 7aa:	11 f4       	brne	.+4      	; 0x7b0 <__fp_round+0x18>
 7ac:	60 ff       	sbrs	r22, 0
 7ae:	04 c0       	rjmp	.+8      	; 0x7b8 <__fp_round+0x20>
 7b0:	6f 5f       	subi	r22, 0xFF	; 255
 7b2:	7f 4f       	sbci	r23, 0xFF	; 255
 7b4:	8f 4f       	sbci	r24, 0xFF	; 255
 7b6:	9f 4f       	sbci	r25, 0xFF	; 255
 7b8:	08 95       	ret

000007ba <__fp_split3>:
 7ba:	57 fd       	sbrc	r21, 7
 7bc:	90 58       	subi	r25, 0x80	; 128
 7be:	44 0f       	add	r20, r20
 7c0:	55 1f       	adc	r21, r21
 7c2:	59 f0       	breq	.+22     	; 0x7da <__fp_splitA+0x10>
 7c4:	5f 3f       	cpi	r21, 0xFF	; 255
 7c6:	71 f0       	breq	.+28     	; 0x7e4 <__fp_splitA+0x1a>
 7c8:	47 95       	ror	r20

000007ca <__fp_splitA>:
 7ca:	88 0f       	add	r24, r24
 7cc:	97 fb       	bst	r25, 7
 7ce:	99 1f       	adc	r25, r25
 7d0:	61 f0       	breq	.+24     	; 0x7ea <__fp_splitA+0x20>
 7d2:	9f 3f       	cpi	r25, 0xFF	; 255
 7d4:	79 f0       	breq	.+30     	; 0x7f4 <__fp_splitA+0x2a>
 7d6:	87 95       	ror	r24
 7d8:	08 95       	ret
 7da:	12 16       	cp	r1, r18
 7dc:	13 06       	cpc	r1, r19
 7de:	14 06       	cpc	r1, r20
 7e0:	55 1f       	adc	r21, r21
 7e2:	f2 cf       	rjmp	.-28     	; 0x7c8 <__fp_split3+0xe>
 7e4:	46 95       	lsr	r20
 7e6:	f1 df       	rcall	.-30     	; 0x7ca <__fp_splitA>
 7e8:	08 c0       	rjmp	.+16     	; 0x7fa <__fp_splitA+0x30>
 7ea:	16 16       	cp	r1, r22
 7ec:	17 06       	cpc	r1, r23
 7ee:	18 06       	cpc	r1, r24
 7f0:	99 1f       	adc	r25, r25
 7f2:	f1 cf       	rjmp	.-30     	; 0x7d6 <__fp_splitA+0xc>
 7f4:	86 95       	lsr	r24
 7f6:	71 05       	cpc	r23, r1
 7f8:	61 05       	cpc	r22, r1
 7fa:	08 94       	sec
 7fc:	08 95       	ret

000007fe <__fp_zero>:
 7fe:	e8 94       	clt

00000800 <__fp_szero>:
 800:	bb 27       	eor	r27, r27
 802:	66 27       	eor	r22, r22
 804:	77 27       	eor	r23, r23
 806:	cb 01       	movw	r24, r22
 808:	97 f9       	bld	r25, 7
 80a:	08 95       	ret

0000080c <__mulsf3>:
 80c:	0e 94 19 04 	call	0x832	; 0x832 <__mulsf3x>
 810:	0c 94 cc 03 	jmp	0x798	; 0x798 <__fp_round>
 814:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscA>
 818:	38 f0       	brcs	.+14     	; 0x828 <__mulsf3+0x1c>
 81a:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_pscB>
 81e:	20 f0       	brcs	.+8      	; 0x828 <__mulsf3+0x1c>
 820:	95 23       	and	r25, r21
 822:	11 f0       	breq	.+4      	; 0x828 <__mulsf3+0x1c>
 824:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 828:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_nan>
 82c:	11 24       	eor	r1, r1
 82e:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>

00000832 <__mulsf3x>:
 832:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_split3>
 836:	70 f3       	brcs	.-36     	; 0x814 <__mulsf3+0x8>

00000838 <__mulsf3_pse>:
 838:	95 9f       	mul	r25, r21
 83a:	c1 f3       	breq	.-16     	; 0x82c <__mulsf3+0x20>
 83c:	95 0f       	add	r25, r21
 83e:	50 e0       	ldi	r21, 0x00	; 0
 840:	55 1f       	adc	r21, r21
 842:	62 9f       	mul	r22, r18
 844:	f0 01       	movw	r30, r0
 846:	72 9f       	mul	r23, r18
 848:	bb 27       	eor	r27, r27
 84a:	f0 0d       	add	r31, r0
 84c:	b1 1d       	adc	r27, r1
 84e:	63 9f       	mul	r22, r19
 850:	aa 27       	eor	r26, r26
 852:	f0 0d       	add	r31, r0
 854:	b1 1d       	adc	r27, r1
 856:	aa 1f       	adc	r26, r26
 858:	64 9f       	mul	r22, r20
 85a:	66 27       	eor	r22, r22
 85c:	b0 0d       	add	r27, r0
 85e:	a1 1d       	adc	r26, r1
 860:	66 1f       	adc	r22, r22
 862:	82 9f       	mul	r24, r18
 864:	22 27       	eor	r18, r18
 866:	b0 0d       	add	r27, r0
 868:	a1 1d       	adc	r26, r1
 86a:	62 1f       	adc	r22, r18
 86c:	73 9f       	mul	r23, r19
 86e:	b0 0d       	add	r27, r0
 870:	a1 1d       	adc	r26, r1
 872:	62 1f       	adc	r22, r18
 874:	83 9f       	mul	r24, r19
 876:	a0 0d       	add	r26, r0
 878:	61 1d       	adc	r22, r1
 87a:	22 1f       	adc	r18, r18
 87c:	74 9f       	mul	r23, r20
 87e:	33 27       	eor	r19, r19
 880:	a0 0d       	add	r26, r0
 882:	61 1d       	adc	r22, r1
 884:	23 1f       	adc	r18, r19
 886:	84 9f       	mul	r24, r20
 888:	60 0d       	add	r22, r0
 88a:	21 1d       	adc	r18, r1
 88c:	82 2f       	mov	r24, r18
 88e:	76 2f       	mov	r23, r22
 890:	6a 2f       	mov	r22, r26
 892:	11 24       	eor	r1, r1
 894:	9f 57       	subi	r25, 0x7F	; 127
 896:	50 40       	sbci	r21, 0x00	; 0
 898:	9a f0       	brmi	.+38     	; 0x8c0 <__stack+0x61>
 89a:	f1 f0       	breq	.+60     	; 0x8d8 <__stack+0x79>
 89c:	88 23       	and	r24, r24
 89e:	4a f0       	brmi	.+18     	; 0x8b2 <__stack+0x53>
 8a0:	ee 0f       	add	r30, r30
 8a2:	ff 1f       	adc	r31, r31
 8a4:	bb 1f       	adc	r27, r27
 8a6:	66 1f       	adc	r22, r22
 8a8:	77 1f       	adc	r23, r23
 8aa:	88 1f       	adc	r24, r24
 8ac:	91 50       	subi	r25, 0x01	; 1
 8ae:	50 40       	sbci	r21, 0x00	; 0
 8b0:	a9 f7       	brne	.-22     	; 0x89c <__stack+0x3d>
 8b2:	9e 3f       	cpi	r25, 0xFE	; 254
 8b4:	51 05       	cpc	r21, r1
 8b6:	80 f0       	brcs	.+32     	; 0x8d8 <__stack+0x79>
 8b8:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 8bc:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>
 8c0:	5f 3f       	cpi	r21, 0xFF	; 255
 8c2:	e4 f3       	brlt	.-8      	; 0x8bc <__stack+0x5d>
 8c4:	98 3e       	cpi	r25, 0xE8	; 232
 8c6:	d4 f3       	brlt	.-12     	; 0x8bc <__stack+0x5d>
 8c8:	86 95       	lsr	r24
 8ca:	77 95       	ror	r23
 8cc:	67 95       	ror	r22
 8ce:	b7 95       	ror	r27
 8d0:	f7 95       	ror	r31
 8d2:	e7 95       	ror	r30
 8d4:	9f 5f       	subi	r25, 0xFF	; 255
 8d6:	c1 f7       	brne	.-16     	; 0x8c8 <__stack+0x69>
 8d8:	fe 2b       	or	r31, r30
 8da:	88 0f       	add	r24, r24
 8dc:	91 1d       	adc	r25, r1
 8de:	96 95       	lsr	r25
 8e0:	87 95       	ror	r24
 8e2:	97 f9       	bld	r25, 7
 8e4:	08 95       	ret

000008e6 <__udivmodsi4>:
 8e6:	a1 e2       	ldi	r26, 0x21	; 33
 8e8:	1a 2e       	mov	r1, r26
 8ea:	aa 1b       	sub	r26, r26
 8ec:	bb 1b       	sub	r27, r27
 8ee:	fd 01       	movw	r30, r26
 8f0:	0d c0       	rjmp	.+26     	; 0x90c <__udivmodsi4_ep>

000008f2 <__udivmodsi4_loop>:
 8f2:	aa 1f       	adc	r26, r26
 8f4:	bb 1f       	adc	r27, r27
 8f6:	ee 1f       	adc	r30, r30
 8f8:	ff 1f       	adc	r31, r31
 8fa:	a2 17       	cp	r26, r18
 8fc:	b3 07       	cpc	r27, r19
 8fe:	e4 07       	cpc	r30, r20
 900:	f5 07       	cpc	r31, r21
 902:	20 f0       	brcs	.+8      	; 0x90c <__udivmodsi4_ep>
 904:	a2 1b       	sub	r26, r18
 906:	b3 0b       	sbc	r27, r19
 908:	e4 0b       	sbc	r30, r20
 90a:	f5 0b       	sbc	r31, r21

0000090c <__udivmodsi4_ep>:
 90c:	66 1f       	adc	r22, r22
 90e:	77 1f       	adc	r23, r23
 910:	88 1f       	adc	r24, r24
 912:	99 1f       	adc	r25, r25
 914:	1a 94       	dec	r1
 916:	69 f7       	brne	.-38     	; 0x8f2 <__udivmodsi4_loop>
 918:	60 95       	com	r22
 91a:	70 95       	com	r23
 91c:	80 95       	com	r24
 91e:	90 95       	com	r25
 920:	9b 01       	movw	r18, r22
 922:	ac 01       	movw	r20, r24
 924:	bd 01       	movw	r22, r26
 926:	cf 01       	movw	r24, r30
 928:	08 95       	ret

0000092a <_exit>:
 92a:	f8 94       	cli

0000092c <__stop_program>:
 92c:	ff cf       	rjmp	.-2      	; 0x92c <__stop_program>
