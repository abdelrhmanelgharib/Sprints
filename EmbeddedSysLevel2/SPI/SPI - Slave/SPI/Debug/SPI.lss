
SPI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001e6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000023a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000023a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000026c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e2a  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f2  00000000  00000000  000011d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008db  00000000  00000000  000019c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c8  00000000  00000000  000022a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000639  00000000  00000000  00002468  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000777  00000000  00000000  00002aa1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00003218  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "SER_SPI_int.h"

int main(void)
{
	
	SER_SPIvoidInitPinSlave();
  6c:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <SER_SPIvoidInitPinSlave>
	
	
    SPI_ENSlaveInit();
  70:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_ENSlaveInit>
	
    uint8_t x = SPI_u8ReceiveData();
  74:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <SPI_u8ReceiveData>
	
	DIO_voidSetPortValue(PORT_A, x);
  78:	68 2f       	mov	r22, r24
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_voidSetPortValue>
  80:	ff cf       	rjmp	.-2      	; 0x80 <main+0x14>

00000082 <DIO_voidSetPinDirection>:
  82:	41 11       	cpse	r20, r1
  84:	3c c0       	rjmp	.+120    	; 0xfe <DIO_voidSetPinDirection+0x7c>
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	99 f0       	breq	.+38     	; 0xb0 <DIO_voidSetPinDirection+0x2e>
  8a:	28 f0       	brcs	.+10     	; 0x96 <DIO_voidSetPinDirection+0x14>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	e9 f0       	breq	.+58     	; 0xca <DIO_voidSetPinDirection+0x48>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	41 f1       	breq	.+80     	; 0xe4 <DIO_voidSetPinDirection+0x62>
  94:	6e c0       	rjmp	.+220    	; 0x172 <DIO_voidSetPinDirection+0xf0>
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_voidSetPinDirection+0x20>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_voidSetPinDirection+0x1c>
  a6:	80 95       	com	r24
  a8:	82 23       	and	r24, r18
  aa:	8a bb       	out	0x1a, r24	; 26
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	08 95       	ret
  b0:	27 b3       	in	r18, 0x17	; 23
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	02 c0       	rjmp	.+4      	; 0xbc <DIO_voidSetPinDirection+0x3a>
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	6a 95       	dec	r22
  be:	e2 f7       	brpl	.-8      	; 0xb8 <DIO_voidSetPinDirection+0x36>
  c0:	80 95       	com	r24
  c2:	82 23       	and	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	84 e0       	ldi	r24, 0x04	; 4
  c8:	08 95       	ret
  ca:	24 b3       	in	r18, 0x14	; 20
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <DIO_voidSetPinDirection+0x54>
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	6a 95       	dec	r22
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <DIO_voidSetPinDirection+0x50>
  da:	80 95       	com	r24
  dc:	82 23       	and	r24, r18
  de:	84 bb       	out	0x14, r24	; 20
  e0:	84 e0       	ldi	r24, 0x04	; 4
  e2:	08 95       	ret
  e4:	21 b3       	in	r18, 0x11	; 17
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <DIO_voidSetPinDirection+0x6e>
  ec:	88 0f       	add	r24, r24
  ee:	99 1f       	adc	r25, r25
  f0:	6a 95       	dec	r22
  f2:	e2 f7       	brpl	.-8      	; 0xec <DIO_voidSetPinDirection+0x6a>
  f4:	80 95       	com	r24
  f6:	82 23       	and	r24, r18
  f8:	81 bb       	out	0x11, r24	; 17
  fa:	84 e0       	ldi	r24, 0x04	; 4
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	d1 f5       	brne	.+116    	; 0x176 <DIO_voidSetPinDirection+0xf4>
 102:	81 30       	cpi	r24, 0x01	; 1
 104:	91 f0       	breq	.+36     	; 0x12a <DIO_voidSetPinDirection+0xa8>
 106:	28 f0       	brcs	.+10     	; 0x112 <DIO_voidSetPinDirection+0x90>
 108:	82 30       	cpi	r24, 0x02	; 2
 10a:	d9 f0       	breq	.+54     	; 0x142 <DIO_voidSetPinDirection+0xc0>
 10c:	83 30       	cpi	r24, 0x03	; 3
 10e:	29 f1       	breq	.+74     	; 0x15a <DIO_voidSetPinDirection+0xd8>
 110:	34 c0       	rjmp	.+104    	; 0x17a <DIO_voidSetPinDirection+0xf8>
 112:	2a b3       	in	r18, 0x1a	; 26
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_voidSetPinDirection+0x9c>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_voidSetPinDirection+0x98>
 122:	82 2b       	or	r24, r18
 124:	8a bb       	out	0x1a, r24	; 26
 126:	84 e0       	ldi	r24, 0x04	; 4
 128:	08 95       	ret
 12a:	27 b3       	in	r18, 0x17	; 23
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_voidSetPinDirection+0xb4>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_voidSetPinDirection+0xb0>
 13a:	82 2b       	or	r24, r18
 13c:	87 bb       	out	0x17, r24	; 23
 13e:	84 e0       	ldi	r24, 0x04	; 4
 140:	08 95       	ret
 142:	24 b3       	in	r18, 0x14	; 20
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_voidSetPinDirection+0xcc>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	6a 95       	dec	r22
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_voidSetPinDirection+0xc8>
 152:	82 2b       	or	r24, r18
 154:	84 bb       	out	0x14, r24	; 20
 156:	84 e0       	ldi	r24, 0x04	; 4
 158:	08 95       	ret
 15a:	21 b3       	in	r18, 0x11	; 17
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_voidSetPinDirection+0xe4>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	6a 95       	dec	r22
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_voidSetPinDirection+0xe0>
 16a:	82 2b       	or	r24, r18
 16c:	81 bb       	out	0x11, r24	; 17
 16e:	84 e0       	ldi	r24, 0x04	; 4
 170:	08 95       	ret
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	08 95       	ret
 176:	84 e0       	ldi	r24, 0x04	; 4
 178:	08 95       	ret
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	08 95       	ret

0000017e <DIO_voidSetPortValue>:
 17e:	81 30       	cpi	r24, 0x01	; 1
 180:	49 f0       	breq	.+18     	; 0x194 <DIO_voidSetPortValue+0x16>
 182:	28 f0       	brcs	.+10     	; 0x18e <DIO_voidSetPortValue+0x10>
 184:	82 30       	cpi	r24, 0x02	; 2
 186:	49 f0       	breq	.+18     	; 0x19a <DIO_voidSetPortValue+0x1c>
 188:	83 30       	cpi	r24, 0x03	; 3
 18a:	51 f0       	breq	.+20     	; 0x1a0 <DIO_voidSetPortValue+0x22>
 18c:	0c c0       	rjmp	.+24     	; 0x1a6 <DIO_voidSetPortValue+0x28>
 18e:	6b bb       	out	0x1b, r22	; 27
 190:	84 e0       	ldi	r24, 0x04	; 4
 192:	08 95       	ret
 194:	68 bb       	out	0x18, r22	; 24
 196:	84 e0       	ldi	r24, 0x04	; 4
 198:	08 95       	ret
 19a:	65 bb       	out	0x15, r22	; 21
 19c:	84 e0       	ldi	r24, 0x04	; 4
 19e:	08 95       	ret
 1a0:	62 bb       	out	0x12, r22	; 18
 1a2:	84 e0       	ldi	r24, 0x04	; 4
 1a4:	08 95       	ret
 1a6:	82 e0       	ldi	r24, 0x02	; 2
 1a8:	08 95       	ret

000001aa <SPI_ENSlaveInit>:
void SPI_voidSendData(uint8_t data)
{
    SPDR = data;  
    while (!(GETBIT(SPSR, SPIF)));
     
}
 1aa:	6c 98       	cbi	0x0d, 4	; 13
 1ac:	6e 9a       	sbi	0x0d, 6	; 13
 1ae:	08 95       	ret

000001b0 <SPI_u8ReceiveData>:
 * 
 * @return uint8_t 
 */
uint8_t SPI_u8ReceiveData(void)
{
    while (!(GETBIT(SPSR, SPIF)));  
 1b0:	77 9b       	sbis	0x0e, 7	; 14
 1b2:	fe cf       	rjmp	.-4      	; 0x1b0 <SPI_u8ReceiveData>
    return SPDR;
 1b4:	8f b1       	in	r24, 0x0f	; 15
 1b6:	08 95       	ret

000001b8 <SER_SPIvoidInitPinSlave>:
 * @brief Initialize Pin for Slave
 * 
 */
void SER_SPIvoidInitPinSlave(void)
{
    DIO_voidSetPinDirection(PORT_B, PIN4, INPUT);
 1b8:	40 e0       	ldi	r20, 0x00	; 0
 1ba:	64 e0       	ldi	r22, 0x04	; 4
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(PORT_B, PIN5, INPUT);
 1c2:	40 e0       	ldi	r20, 0x00	; 0
 1c4:	65 e0       	ldi	r22, 0x05	; 5
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(PORT_B, PIN6, OUTPUT);
 1cc:	41 e0       	ldi	r20, 0x01	; 1
 1ce:	66 e0       	ldi	r22, 0x06	; 6
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(PORT_B, PIN7, INPUT);
 1d6:	40 e0       	ldi	r20, 0x00	; 0
 1d8:	67 e0       	ldi	r22, 0x07	; 7
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDirection>
 1e0:	08 95       	ret

000001e2 <_exit>:
 1e2:	f8 94       	cli

000001e4 <__stop_program>:
 1e4:	ff cf       	rjmp	.-2      	; 0x1e4 <__stop_program>
